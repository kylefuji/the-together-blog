name: ci

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6,3.7, 3.8, 3.9]

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_DB: thetogetherblog        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Test with pytest
      #   run: |
      #     pip install pytest
      #     pytest
      - name: Migrate and test
        run: |
          dir
          python manage.py makemigrations home
          python manage.py migrate
          python manage.py test

      - name: Run code coverage and generate report
        run: |
          python -m coverage erase
          python -m coverage run manage.py test
          python -m coverage report
          python -m coverage xml
      - name: Upload codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./coverage.xml # path to report file
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          